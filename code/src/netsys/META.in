description = "Ocamlnet - OS-specific functions"
requires = "bytes,unix"
version = "@VERSION@"
archive(byte) = "netsys_oothr.cma netsys.cma"
archive(native) = "netsys_oothr.cmxa netsys.cmxa"
archive(native,gprof) = "netsys_oothr.p.cmxa netsys.p.cmxa netsys_c_gprof.o netsys_gprof_init.p.cmx"
archive(byte,mt) = "netsys_oothr_mt.cma netsys_oothr_mt_init.cmo netsys.cma"
archive(native,mt) = "netsys_oothr_mt.cmxa netsys_oothr_mt_init.cmx netsys.cmxa"
archive(native,gprof,mt) = "netsys_oothr_mt.p.cmxa netsys_oothr_mt_init.p.cmx netsys.p.cmxa"
archive(byte,toploop) = "netsys_oothr.cma netsys.cma"
archive(byte,mt,toploop) = "netsys_oothr_mt.cma netsys_oothr_mt_init.cmo netsys.cma"

plugin(byte) = "netsys_oothr.cma netsys.cma"
plugin(byte,mt) = "netsys_oothr_mt.cma netsys_oothr_mt_init.cmo netsys.cma"
plugin(native) = "netsys_oothr.cmxs netsys.cmxs"
plugin(native,mt) = "netsys_oothr_mt.cmxs netsys_oothr_mt_init.cmxs netsys.cmxs"
plugin(native,gprof,mt) = "netsys_oothr_mt.p.cmxs netsys_oothr_mt_init.p.cmxs netsys.p.cmxs"

package "outofheap" (
        version = "@VERSION@"
        description = "Ocamlnet - override caml_modify and caml_initialize"
        requires = ""
	exists_if = "netsys_c_outofheap.o"
        archive(byte) = "netsys_c_outofheap.o"
        archive(native) = "netsys_c_outofheap.o"
        linkopts(byte) = "-custom"
)
